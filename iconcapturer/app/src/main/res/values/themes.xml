<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.SuspendedWindow" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>


    <style name="Theme.TransparentActivity" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/teal_200</item>
        <item name="colorSecondaryVariant">@color/teal_700</item>
        <item name="colorOnSecondary">@color/black</item>
        <!-- Status bar color. -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/colorPrimaryVariant</item>
        <!-- Customize your theme here. -->
    </style>

    <!--below is the style for transparent activity and here we are using no action bar.-->
    <style name="Theme.AppCompat.Translucent" parent="Theme.AppCompat.NoActionBar">
        <!--on below line we are setting background as transparent color-->
        <item name="android:background">@android:color/transparent</item>
        <!--on below line we are displaying the windowNotitle as true as we are not displaying our status bar-->
        <item name="android:windowNoTitle">true</item>
        <!--on below line we are setting our window background as transparent color-->
        <item name="android:windowBackground">@android:color/transparent</item>
        <!--on below line we are setting color background cache hint as null-->
        <item name="android:colorBackgroundCacheHint">@null</item>
        <!--on below line we are adding a window translucent as true-->
        <item name="android:windowIsTranslucent">true</item>
        <!--on below line we are adding a window animationstyle-->
        <item name="android:windowAnimationStyle">@android:style/Animation</item>
    </style>

    <style name="Theme.AppCompat.CustomStyle" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- 应用的主要色调,actionBar默认使用该颜色，Toolbar导航栏的底色 -->
        <item name="colorPrimary">@color/white</item>
        <!-- 应用的主要暗色调,statusBarColor 默认使用该颜色 -->
        <item name="colorPrimaryDark">@color/white</item>
        <!-- 一般控件的选中效果默认采用该颜色,如 CheckBox,RadioButton,SwitchCompat，ProcessBar等-->
        <item name="colorAccent">@color/themeSelected</item>
        <!-- 改变status bar 文字颜色， true黑色， false白色，API23可用-->
        <item name="android:windowLightStatusBar">true</item>
        <item name="android:windowBackground">@color/gray</item>
<!--        <item name="android:windowDrawsSystemBarBackgrounds">true</item>-->
        <item name="android:windowTranslucentStatus">true</item>

<!--        <item name="snackbarStyle">@style/Widget.App.Snackbar</item>-->
<!--        <item name="snackbarButtonStyle">@style/Widget.App.SnackbarButton</item>-->

<!--        <item name="snackbarStyle">@style/snackbar_style</item>-->
<!--        <item name="snackbarButtonStyle">@style/snackbar_button</item>-->

        <!-- 状态栏、顶部导航栏 相关-->
<!--        &lt;!&ndash; status bar color &ndash;&gt;-->
<!--        <item name="android:statusBarColor">@color/gray</item>-->
<!--        &lt;!&ndash; activity 是否能在status bar 底部绘制 &ndash;&gt;-->
<!--        <item name="android:windowOverscan">true</item>-->
<!--        &lt;!&ndash; 让status bar透明，相当于statusBarColor=transparent + windowOverscan=true &ndash;&gt;-->
<!--        <item name="android:windowTranslucentStatus">true</item>-->
<!--        &lt;!&ndash; 改变status bar 文字颜色， true黑色， false白色，API23可用&ndash;&gt;-->
<!--        <item name="android:windowLightStatusBar">true</item>-->
<!--        &lt;!&ndash; 全屏显示，隐藏状态栏、导航栏、底部导航栏 &ndash;&gt;-->
<!--        <item name="android:windowFullscreen">true</item>-->
<!--        &lt;!&ndash; hide title bar &ndash;&gt;-->
<!--        <item name="windowNoTitle">true</item>-->
<!--&lt;!&ndash;        &lt;!&ndash; 底部虚拟导航栏颜色 &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        <item name="android:navigationBarColor">#E91E63</item>&ndash;&gt;-->
<!--        &lt;!&ndash; 让底部导航栏变半透明灰色，覆盖在Activity之上（默认false，activity会居于底部导航栏顶部），如果设为true，navigationBarColor 失效 &ndash;&gt;-->
<!--        <item name="android:windowTranslucentNavigation">true</item>-->

<!--        &lt;!&ndash; WindowBackground，可以设置@drawable，颜色引用（@color），不能设置颜色值（#fffffff），-->
<!--        Window区域说明：Window涵盖整个屏幕显示区域，包括StatusBar的区域。当windowOverscan=false时，window的区域比Activity多出StatusBar，当windowOverscan=true时，window区域与Activity相同&ndash;&gt;-->
<!--        <item name="android:windowBackground">@color/white</item>-->
<!--        &lt;!&ndash;<item name="android:windowBackground">@color/light_purple</item>&ndash;&gt;-->

        <!-- 控件相关 -->
        <!-- button 文字是否全部大写（系统默认开）-->
        <item name="android:textAllCaps">false</item>

<!--        &lt;!&ndash; 默认 Button,TextView的文字颜色 &ndash;&gt;-->
<!--        <item name="android:textColor">#B0C4DE</item>-->
<!--        &lt;!&ndash; 默认 EditView 输入框字体的颜色 &ndash;&gt;-->
<!--        <item name="android:editTextColor">#E6E6FA</item>-->
<!--        &lt;!&ndash; RadioButton checkbox等控件的文字 &ndash;&gt;-->
<!--        <item name="android:textColorPrimaryDisableOnly">#1C71A9</item>-->
<!--        &lt;!&ndash; 应用的主要文字颜色,actionBar的标题文字默认使用该颜色 &ndash;&gt;-->
<!--        <item name="android:textColorPrimary">#FFFFFF</item>-->
<!--        &lt;!&ndash; 辅助的文字颜色，一般比textColorPrimary的颜色弱一点，用于一些弱化的表示 &ndash;&gt;-->
<!--        <item name="android:textColorSecondary">#C1C1C1</item>-->
<!--        &lt;!&ndash; 控件选中时的颜色,默认使用colorAccent &ndash;&gt;-->
<!--        <item name="android:colorControlActivated">#FF7F50</item>-->
<!--        &lt;!&ndash; 控件按压时的色调&ndash;&gt;-->
<!--        <item name="android:colorControlHighlight">#FF00FF</item>-->
<!--        &lt;!&ndash; CheckBox,RadioButton,SwitchCompat等默认状态的颜色 &ndash;&gt;-->
<!--        <item name="android:colorControlNormal">#FFD700</item>-->
<!--        &lt;!&ndash; 默认按钮的背景颜色 &ndash;&gt;-->
<!--        <item name="android:colorButtonNormal">#1C71A9</item>-->

<!--        &lt;!&ndash; 【无效】 在theme中设置Activity的属性无效， 请到AndroidManifest中Activity标签下设置 &ndash;&gt;-->
<!--        <item name="android:launchMode">singleTop</item>-->
<!--        <item name="android:screenOrientation">landscape</item>-->
    </style>

    <style name="Theme.AppCompat.IconActivityTheme" parent="Theme.AppCompat.CustomStyle">
        <item name="android:statusBarColor">@android:color/transparent</item>
    </style>

<!--    <style name="Widget.App.Snackbar" parent="Widget.MaterialComponents.Snackbar">-->
<!--        <item name="materialThemeOverlay">@style/ThemeOverlay.App.Snackbar</item>-->
<!--        <item name="actionTextColorAlpha">1</item>-->
<!--    </style>-->

<!--    <style name="Widget.App.SnackbarButton" parent="Widget.MaterialComponents.Button.TextButton.Snackbar">-->
<!--        <item name="android:textColor">@color/themeSelected</item>-->
<!--    </style>-->

<!--    <style name="ThemeOverlay.App.Snackbar" parent="">-->
<!--        <item name="colorPrimary">@color/seperator</item>-->
<!--        <item name="colorOnSurface">@color/white</item>-->
<!--    </style>-->


</resources>